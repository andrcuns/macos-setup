# =====================================================================================================================
# Instant powerlevel10k prompt
# =====================================================================================================================
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# =====================================================================================================================
# Exports
# =====================================================================================================================
# GPG vars
export LANG=en_US.UTF-8
export GPG_TTY=$(tty)

# Preferred editor
export EDITOR='nvim'

# Set custom PATH
export PATH=$PATH:$HOME/bin

# Direnv integrationÂ¬
eval "$(direnv hook zsh)"

# =====================================================================================================================
# Oh my zsh settings
# =====================================================================================================================
# Fix insecure completion-dependent directories detected on Catalina
export ZSH_DISABLE_COMPFIX="true"

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# =====================================================================================================================
# Powerlevel10k
# =====================================================================================================================
ZSH_THEME="powerlevel10k/powerlevel10k"
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# =====================================================================================================================
# Plugins
# =====================================================================================================================
# OSX
plugins=(brew sudo)

# TERMINAL
plugins+=(zsh-syntax-highlighting zsh-autosuggestions zsh-completions)

# VM
plugins+=(docker kubectl)

# DEV
plugins+=(git npm yarn gem zsh-nvm rbenv asdf)

# =====================================================================================================================
# Sourcing
# =====================================================================================================================
# Oh-my-zsh
source $ZSH/oh-my-zsh.sh
source $ZSH/custom/plugins/zsh-history-substring-search/zsh-history-substring-search.zsh

# =====================================================================================================================
# Plugin bindings
# =====================================================================================================================
# History substring search plugin binding
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down

# Autosuggestions + Substring search config
ZSH_AUTOSUGGEST_CLEAR_WIDGETS=("${(@)ZSH_AUTOSUGGEST_CLEAR_WIDGETS:#(up|down)-line-or-history}")
ZSH_AUTOSUGGEST_CLEAR_WIDGETS+=(history-substring-search-up history-substring-search-down)

# Custom zsh-nvm options
export NVM_LAZY_LOAD=true

# =====================================================================================================================
# Additional aliases
# =====================================================================================================================
alias vim='nvim'
alias gbd='git push origin --delete $(git_current_branch)'
alias gcleanup=$'git fetch -p && git branch -v | grep \'gone\' | awk \'{print $1}\' | xargs -n 1 git branch -D'
alias dockerstopall='docker stop $(docker ps -a -q)'
alias dockerrmall='docker rm $(docker ps -a -q)'
alias dockerrmidangling='docker rmi -f $(docker images -f "dangling=true" -q)'
alias cat='bat'
alias help='tldr'
alias q='exit'
alias fsize='ncdu --color dark -x --exclude .git --exclude node_modules'
alias lg='lazygit'
alias ld='lazydocker'
alias grep='ggrep'
alias zshrc='vim $HOME/.zshrc'

# Update software
alias npmupdate='npm update -g'
alias update='brew cu && npmupdate'

# =====================================================================================================================
# SDKMAN
# =====================================================================================================================
# THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="/Users/andrejs/.sdkman"
[[ -s "/Users/andrejs/.sdkman/bin/sdkman-init.sh" ]] && source "/Users/andrejs/.sdkman/bin/sdkman-init.sh"
